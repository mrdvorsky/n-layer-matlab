clc;
clear;
% close all;

%% Inputs
wgR2 = 7.5/2;
wgR1 = wgR2 * 4.3/10;

wg2R1 = 15/2;
wg2R2 = 25/2;


xView = 1.1 * linspace(-1, 1, 1001);
yView = 1.1 * linspace(-1, 1, 1001);

numF = 41;

m = 0;
n = 3;

%% Calculate Spectrums
% [specEx1{1}, specEy1{1}, modeCutoffs1(1), phaseScale1(1)] ...
%         = nLayerOpenEnded.getSpectrumCoaxial(wgR1, wgR2, m, 0, "TM");
% modeStruct = nLayerOpenEnded.createModeStruct(...
%     SpecEx_TM=specEx1, ...
%     SpecEy_TM=specEy1, ...
%     CutoffBeta_TM=modeCutoffs1, ...
%     PhaseScaleFactor_TM=phaseScale1, ...
%     OutputModes_TM=true);
% NL1 = nLayerOpenEnded(modeStruct);

% for ii = 1:n + 1
%     [specEx{ii}, specEy{ii}, modeCutoffs(ii), phaseScale(ii)] ...
%         = nLayerOpenEnded.getSpectrumCoaxial(wgR1, wgR2, m, ii - 1, "TM");
% end
for ii = 1:n + 1
    [specEx{ii}, specEy{ii}, modeCutoffs(ii), phaseScale(ii)] ...
        = nLayerOpenEnded.getSpectrumCircular(wgR2, m, ii, "TM");
end
for ii = n + 1:n + 1 + 10
    [specEx{ii}, specEy{ii}, modeCutoffs(ii), phaseScale(ii)] ...
        = nLayerOpenEnded.getSpectrumCoaxial(wg2R1, wg2R2, m, ii - n - 1, "TM");
end
modeStruct = nLayerOpenEnded.createModeStruct(...
    SpecEx_TM=specEx(1:n + 1), ...
    SpecEy_TM=specEy(1:n + 1), ...
    CutoffBeta_TM=modeCutoffs(1:n + 1), ...
    PhaseScaleFactor_TM=phaseScale(1:n + 1), ...
    OutputModes_TM=((0:n) == 0));
NL1 = nLayerOpenEnded(modeStruct);

modeStruct = nLayerOpenEnded.createModeStruct(...
    SpecEx_TM=specEx, ...
    SpecEy_TM=specEy, ...
    CutoffBeta_TM=modeCutoffs, ...
    PhaseScaleFactor_TM=phaseScale, ...
    OutputModes_TM=(1:numel(specEy)) == 1);
NL2 = nLayerOpenEnded(modeStruct);

% nLayerOpenEnded.plotModeStruct(modeStruct, ...
%     SizeX=2, SizeY=2, PlotCoordinates="Rectangular");

nLayerOpenEnded.plotModeStruct(modeStruct, ...
    SizeX=30, SizeY=30, PlotCoordinates="Polar", ...
    NumPointsX=1000, NumPointsY=1000);

figure;
nLayerViewer([1 - 0.001j], [], 10, ...
    NL1, linspace(6.5, 18, numF), ...
    NL1, linspace(0.5, 6, numF), ...
    NL2, linspace(6.5, 18, numF), ...
    NL2, linspace(0.5, 6, numF));
legend(...
    "1 Mode: 5-10 GHz", ...
    "1 Mode: 1-2 GHz", ...
    "Multi-Mode: 5-10 GHz", ...
    "Multi-Mode: 1-2 GHz");

